sudo: required
env:
  - CONTAINER_ID=$(mktemp)

services:
  - docker

before_install:
  - sudo apt-get update
  # Pull containers
  - sudo docker pull centos:7
  - sudo docker pull ubuntu:14.04
  # Customize containers
  - sudo docker build --rm=true --file=tests/Dockerfile.centos --tag=centos:ansible tests
  - sudo docker build --rm=true --file=tests/Dockerfile.ubuntu --tag=ubuntu:ansible tests

script:
  #
  # Run test playbook on Ubuntu container
  #

    # Syntax check
  - sudo docker run ubuntu:ansible ansible-playbook /etc/ansible/test.yml --syntax-check
    # Test role
  - sudo docker run ubuntu:ansible ansible-playbook /etc/ansible/test.yml
    # Idempotence test
  - >
    sudo docker run ubuntu:ansible ansible-playbook /etc/ansible/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  #
  # Run test playbook on CentOS container
  #

    # Run container in detached state
  - sudo docker run --detach --privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro centos:ansible /usr/lib/systemd/systemd > "${CONTAINER_ID}"

    # Syntax check
  - sudo docker exec "$(cat ${CONTAINER_ID})" ansible-playbook /etc/ansible/test.yml --syntax-check
    # Test role
  - sudo docker exec "$(cat ${CONTAINER_ID})" ansible-playbook /etc/ansible/test.yml
    # Idempotence test
  - >
    sudo docker exec "$(cat ${CONTAINER_ID})" ansible-playbook /etc/ansible/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

    # Clean up
  - sudo docker stop "$(cat ${CONTAINER_ID})"

notifications:
  email: false
