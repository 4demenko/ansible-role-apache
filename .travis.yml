sudo: required

env:
  # CentOS 6.
  - distribution: centos
    version: 6
    container_id: $(mktemp)
    dockerfile: Dockerfile.centos-6
    init: /sbin/init
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

  # CentOS 7.
  - distribution: centos
    version: 7
    container_id: $(mktemp)
    dockerfile: Dockerfile.centos-7
    init: /usr/lib/systemd/systemd
    run_opts: "--privileged --volume=/sys/fs/cgroup:/sys/fs/cgroup:ro"

  # Ubuntu 12.04.
  - distribution: ubuntu
    version: 12.04
    container_id: $(mktemp)
    dockerfile: Dockerfile.ubuntu-12
    init: /sbin/init
    run_opts: ""

  # Ubuntu 14.04.
  - distribution: ubuntu
    version: 14.04
    container_id: $(mktemp)
    dockerfile: Dockerfile.ubuntu-14
    init: /sbin/init
    run_opts: ""

services:
  - docker

before_install:
  - sudo apt-get update
  # Pull container.
  - "sudo docker pull ${distribution}:${version}"
  # Customize container.
  - "sudo docker build --rm=true --file=tests/${dockerfile} --tag=${distribution}:ansible tests"

script:
  # Run container in detached state.
  - 'sudo docker run --detach --volume="${PWD}":/etc/ansible/roles/role_under_test:ro ${run_opts} ${distribution}:ansible "${init}" > "${container_id}"'

  # Ansible syntax check.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml --syntax-check'

  # Test role.
  - 'sudo docker exec --tty "$(cat ${container_id})" env TERM=xterm ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml'

  # Test role idempotence.
  - >
    sudo docker exec "$(cat ${container_id})" ansible-playbook /etc/ansible/roles/role_under_test/tests/test.yml
    | grep -q 'changed=0.*failed=0'
    && (echo 'Idempotence test: pass' && exit 0)
    || (echo 'Idempotence test: fail' && exit 1)

  # Clean up
  - 'sudo docker stop "$(cat ${container_id})"'
